// Generated by view binder compiler. Do not edit!
package com.example.beansbay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.beansbay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductSpotlightBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView fotoProdukSpotlight;

  @NonNull
  public final TextView hargaProdukSpotlight;

  @NonNull
  public final TextView namaProdukSpotlight;

  @NonNull
  public final TextView namaTokoSpotlight;

  private ItemProductSpotlightBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView fotoProdukSpotlight, @NonNull TextView hargaProdukSpotlight,
      @NonNull TextView namaProdukSpotlight, @NonNull TextView namaTokoSpotlight) {
    this.rootView = rootView;
    this.fotoProdukSpotlight = fotoProdukSpotlight;
    this.hargaProdukSpotlight = hargaProdukSpotlight;
    this.namaProdukSpotlight = namaProdukSpotlight;
    this.namaTokoSpotlight = namaTokoSpotlight;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductSpotlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductSpotlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product_spotlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductSpotlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.foto_produk_spotlight;
      ImageView fotoProdukSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (fotoProdukSpotlight == null) {
        break missingId;
      }

      id = R.id.harga_produk_spotlight;
      TextView hargaProdukSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (hargaProdukSpotlight == null) {
        break missingId;
      }

      id = R.id.nama_produk_spotlight;
      TextView namaProdukSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (namaProdukSpotlight == null) {
        break missingId;
      }

      id = R.id.nama_toko_spotlight;
      TextView namaTokoSpotlight = ViewBindings.findChildViewById(rootView, id);
      if (namaTokoSpotlight == null) {
        break missingId;
      }

      return new ItemProductSpotlightBinding((LinearLayout) rootView, fotoProdukSpotlight,
          hargaProdukSpotlight, namaProdukSpotlight, namaTokoSpotlight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
